{"ast":null,"code":"export default {\n  name: \"Design\",\n  data() {\n    return {\n      pages: {},\n      questionList: []\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    preview(pageId) {\n      for (let i = 0; i < this.questionList.length; i++) {\n        if (this.questionList[i].type === '单选题' || this.questionList[i].type === '多选题') {\n          if (!this.questionList[i].questionItemList?.length) {\n            this.$message.warning('单选题和多选题需要添加选项');\n            return;\n          }\n        }\n        if (!this.questionList[i].name) {\n          this.$message.warning('请填写题目名称');\n          return;\n        }\n      }\n      window.open('/front/preview?pageId=' + pageId);\n    },\n    addQuestionItem(question) {\n      this.$request.post('/questionItem/add', {\n        questionId: question.id,\n        content: question.newContent\n      }).then(res => {\n        if (res.code === '200') {\n          this.$message.success('操作成功');\n          this.load();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    addQuestion(type) {\n      this.$request.post('/question/addForUser', {\n        name: '',\n        type: type,\n        pageId: this.pages.id\n      }).then(res => {\n        if (res.code === '200') {\n          this.$message.success('操作成功');\n          this.load();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    changeQuestionName(question) {\n      let data = JSON.parse(JSON.stringify(question));\n      this.$request.put('/question/update', data).then(res => {\n        if (res.code === '200') {\n          this.$message.success('更新成功');\n          this.load();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    changeQuestionItem(questionItem) {\n      let data = JSON.parse(JSON.stringify(questionItem));\n      this.$request.put('/questionItem/update', data).then(res => {\n        if (res.code === '200') {\n          this.$message.success('更新成功');\n          this.load();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    delQuestion(questionId) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/question/delete/' + questionId).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    delQuestionItem(questionItemId) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/questionItem/delete/' + questionItemId).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load() {\n      let pageId = this.$route.query.pageId;\n      this.$request.get('/pages/selectById/' + pageId).then(res => {\n        this.pages = res.data || {};\n      });\n      this.$request.get('question/selectByPageId/', {\n        params: {\n          pageId: pageId\n        }\n      }).then(res => {\n        this.questionList = res.data || [];\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","pages","questionList","created","load","methods","preview","pageId","i","length","type","questionItemList","$message","warning","window","open","addQuestionItem","question","$request","post","questionId","id","content","newContent","then","res","code","success","error","msg","addQuestion","changeQuestionName","JSON","parse","stringify","put","changeQuestionItem","questionItem","delQuestion","$confirm","response","delete","catch","delQuestionItem","questionItemId","$route","query","get","params"],"sources":["src/views/front/Design.vue"],"sourcesContent":["<script>\r\nexport default {\r\n  name: \"Design\",\r\n  data(){\r\n    return {\r\n      pages:{},\r\n      questionList:[]\r\n    }\r\n  },\r\n  created(){\r\n    this.load()\r\n  },\r\n  methods:{\r\n    preview(pageId){\r\n      for (let i=0;i<this.questionList.length;i++){\r\n        if(this.questionList[i].type==='单选题'||this.questionList[i].type==='多选题'){\r\n          if(!this.questionList[i].questionItemList?.length){\r\n            this.$message.warning('单选题和多选题需要添加选项')\r\n            return;\r\n          }\r\n        }\r\n        if(!this.questionList[i].name){\r\n\r\n          this.$message.warning('请填写题目名称')\r\n          return\r\n\r\n        }\r\n      }\r\n      window.open('/front/preview?pageId='+pageId)\r\n    },\r\n    addQuestionItem(question){\r\n      this.$request.post('/questionItem/add',{questionId: question.id, content: question.newContent}).then(res=>{\r\n        if(res.code==='200'){\r\n          this.$message.success('操作成功')\r\n          this.load()\r\n        }else{\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    addQuestion(type){\r\n      this.$request.post('/question/addForUser',{name:'',type:type,pageId:this.pages.id}).then(res=>{\r\n        if(res.code==='200'){\r\n          this.$message.success('操作成功')\r\n          this.load()\r\n        }else{\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    changeQuestionName(question){\r\n      let data=JSON.parse(JSON.stringify(question))\r\n      this.$request.put('/question/update',data).then(res=>{\r\n        if(res.code==='200'){\r\n          this.$message.success('更新成功')\r\n          this.load()\r\n        }else{\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    changeQuestionItem(questionItem){\r\n      let data=JSON.parse(JSON.stringify(questionItem))\r\n      this.$request.put('/questionItem/update',data).then(res=>{\r\n        if(res.code==='200'){\r\n          this.$message.success('更新成功')\r\n          this.load()\r\n        }else{\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    delQuestion(questionId) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/question/delete/' + questionId).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    delQuestionItem(questionItemId) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/questionItem/delete/' + questionItemId).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(){\r\n      let pageId= this.$route.query.pageId\r\n      this.$request.get('/pages/selectById/'+pageId).then(res=>{\r\n        this.pages=res.data||{}\r\n      })\r\n\r\n      this.$request.get('question/selectByPageId/',{\r\n        params:{\r\n          pageId:pageId\r\n        }\r\n      }).then(res=>{\r\n        this.questionList=res.data||[]\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"main-content\">\r\n    <div class=\"card\">\r\n      <div style=\"display: flex;margin-bottom: 20px\" >\r\n        <div style=\"flex:1\">\r\n         <div  > <span style=\"font-size: 24px;margin-right: 10px\">{{pages.name}}</span>\r\n           <el-tag v-if=\"pages.saved==='否'\">未发布</el-tag>\r\n           <el-tag v-else type=\"success\">已发布</el-tag>\r\n         </div>\r\n        </div>\r\n        <div >\r\n          <el-button type=\"primary\"><i class=\"el-icon-share\"></i>分享</el-button>\r\n          <el-button type=\"info\"><i class=\"el-icon-video-play\" @click=\"preview(pages.id)\"></i>预览</el-button>\r\n          <el-button type=\"success\"><i class=\"el-icon-s-promotion\"></i>发布</el-button>\r\n        </div>\r\n      </div>\r\n      <div style=\"margin-bottom: 20px\">\r\n        <el-button type=\"primary\" @click=\"addQuestion('单选题')\">新建单选题</el-button>\r\n        <el-button type=\"info\" @click=\"addQuestion('多选题')\">新建多选题</el-button>\r\n        <el-button type=\"success\" @click=\"addQuestion('填空题')\">新建填空题</el-button>\r\n      </div>\r\n\r\n      <div>\r\n        <div v-for=\"(item,index) in questionList\" :key=\"item.id\" style=\"margin-bottom: 20px\">\r\n          <div>\r\n            <span style=\"font-weight: bold;margin-right: 5px\" >题目{{index+1}}</span>\r\n            <el-input v-model=\"item.name\" style=\"width: 70%;margin-right: 5px\" @change=\"changeQuestionName(item)\"></el-input>\r\n            <el-tag style=\"margin-right: 5px;color:#2a60c9\" v-if=\"item.type==='单选题'\">{{item.type}}</el-tag>\r\n            <el-tag style=\"margin-right: 5px;color:orange\" v-if=\"item.type==='多选题'\">{{item.type}}</el-tag>\r\n            <el-tag style=\"margin-right: 5px;color:seagreen\" v-if=\"item.type==='填空题'\">{{item.type}}</el-tag>\r\n            <span style=\"color:red;cursor:pointer;font-size: 12px;\" @click=\"delQuestion(item.id)\"><i class=\"el-icon-delete\"></i>删除</span>\r\n          </div>\r\n          <div style=\"padding-left: 40px\" v-if=\"item.questionItemList?.length\">\r\n            <div v-for=\"(sub,subIndex) in item.questionItemList\" :key=\"sub.id\" style=\"margin: 10px 0\">\r\n              <div>\r\n                <span style=\"margin-right: 5px\" >选项{{subIndex+1}}</span>\r\n                <el-input v-model=\"sub.content\" style=\"width: 50%;margin-right: 5px\" @change=\"changeQuestionItem(sub)\"></el-input>\r\n                <span style=\"color:red;cursor:pointer;font-size: 12px;\" @click=\"delQuestionItem(sub.id)\"><i class=\"el-icon-delete\"></i>删除</span>\r\n\r\n\r\n              </div>\r\n\r\n            </div>\r\n            <div>\r\n              <span style=\"margin-right: 5px;color:#2a609c;\" >新选项</span>\r\n              <el-input v-model=\"item.newContent\" style=\"width: 50%;margin-right: 5px\"></el-input>\r\n              <el-button type=\"primary\" class=\"btn-green\" size=\"mini\" @click=\"addQuestionItem(item)\">确认添加</el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}